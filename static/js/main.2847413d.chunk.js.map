{"version":3,"sources":["img/user.png","components/Comentario.js","App.js","reportWebVitals.js","index.js"],"names":["Comentario","props","className","class","src","imgUsuario","alt","nome","email","children","formatRelative","data","Date","locale","ptBR","onClick","onRemove","App","state","comentarios","mensagem","novoComentario","adicionarComentario","evento","preventDefault","novocomentario","setState","removerComentario","comentario","lista","filter","c","digita","target","name","value","this","map","indice","bind","method","onSubmit","type","onChange","required","placeholder","col","rows","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2847413d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.c61ce90f.png\";","import React from 'react';\r\n\r\n//Importação do formatador de data\r\nimport { formatRelative } from 'date-fns';\r\n\r\n//Importação do idioma escolhido\r\nimport { ptBR } from 'date-fns/locale';\r\n\r\nimport './Comentario.css'\r\nimport imgUsuario from '../img/user.png';\r\n\r\nconst Comentario = (props)  =>  {\r\n\r\nreturn <div className=\"Comentario\">\r\n    <img class=\"avatar\" src={imgUsuario} alt={props.nome} />\r\n    <div className=\"conteudo\">\r\n        <h2 class=\"nome\">{props.nome}</h2> \r\n        <p class=\"email\">{props.email}</p>\r\n        <p class=\"mensagem\">{props.children}</p>\r\n        <p class=\"data\">{formatRelative(props.data, new Date(), {locale:ptBR})}</p>\r\n        \r\n        {/*Botao \"X\"*/}\r\n        <button onClick={props.onRemove}>&times;</button>\r\n    </div>\r\n</div>\r\n}\r\nexport default Comentario;","import React, {Component} from 'react';\nimport './App.css';\nimport Comentario from './components/Comentario';\n\nclass App extends Component {\n\n  //Comentarios existent\n   state = {\n    comentarios: [\n      {\n        nome:'João',\n        email:'joaomm@gmail.com',\n        data:new Date(2021, 9, 27),\n        mensagem:'Olá Galera'\n      },\n      {\n        nome:'Pedro',\n        email:'pedrolol@gmail.com',\n        data:new Date(2021, 9, 25),\n        mensagem:'Top top top'\n      }\n    ],\n    novoComentario:{ //Recebe valor de iputs a passar para comentarios ao clicar no botao\n      nome:'',\n      email:'',\n      mensagem:''\n    }\n  }\n\n  //Função acionada ao clicar botao \"Adicionar Comentário\"\n  adicionarComentario = evento =>{\n    evento.preventDefault();\n\n    //Variavel Recebe objeto \"novoComentario\" + data atual\n    const novocomentario = {...this.state.novoComentario, data:new Date()}\n    \n    //Altera o estado do objeto \"comentarios\" e adicionar tudo de \"novoComentario\" dentro dele\n    this.setState({\n      comentarios:[...this.state.comentarios, novocomentario],\n      \n      //Limpa o objeto \"novoComentario\"\n      novoComentario:{nome:'', email:'', mensagem:''}\n    });\n  }\n\n  //Função acionada ao clicar no \"X\"\n  removerComentario = comentario =>{\n\n    //Variavel recebe tudo de objeto \"comentarios\"\n    let lista = this.state.comentarios;\n\n    //varre todo o objeto e retorna somente o que for diferente o que for diferente do comentario selecionado para apagar\n    lista = lista.filter(c => c !== comentario)\n\n    //Atualiza o estado do objeto\n    this.setState({comentarios: lista})\n  }\n\n  //Captura os valores do imput e faz a ligação com o objeto \"novoComentario\"\n  digita = evento =>{\n    const { name, value } = evento.target;\n      this.setState({novoComentario: {...this.state.novoComentario, [name]: value}})\n  }\n\n  render(){\n\n    return (\n\n      //Corpo da página\n      <div className=\"App\">\n\n        {/*Titulo*/}\n        <h1>Projeto Comentários</h1>\n\n        {/*Varre o objeto \"comentarios e mostra na tela\"*/}\n        {this.state.comentarios.map((comentario, indice) =>(\n          <Comentario \n          key={indice}\n          nome={comentario.nome}\n          email={comentario.email}\n          data={comentario.data}\n\n          //Elemento \"X\"\n          onRemove={this.removerComentario.bind(this, comentario)}\n          >\n            {comentario.mensagem}\n          </Comentario>\n        ))}\n\n        {/*Formulário*/}\n        <form className=\"form\" method=\"post\" onSubmit={this.adicionarComentario}>\n          <h2>Adicionar Comentário</h2>\n          <div>\n            <input \n            type=\"text\" \n            name=\"nome\" \n            value={this.state.novoComentario.nome}\n            onChange={this.digita}\n            required\n            placeholder=\"Digite seu nome\"/>\n          </div>\n          <div>\n            <input \n            type=\"text\" \n            name=\"email\" \n            value={this.state.novoComentario.email}\n            onChange={this.digita}\n            required\n            placeholder=\"Digite seu email\"/>\n          </div>\n          <div>\n            <textarea \n            name=\"mensagem\" \n            value={this.state.novoComentario.mensagem}\n            onChange={this.digita}\n            required\n            col=\"3\" \n            rows=\"4\"/>\n          </div>\n            <button type=\"submit\">Adicionar Comentário</button>\n        </form>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}